gettodos:
  description: TODO - Get Todo's API.
  handler:
    - middlewares/authGuard.authGuard
    - then: middlewares/bodyParser.bodyParser
    - then: middlewares/validations/todo/getTodosValidation.validator
    - then: controllers/todo/gettodos.handler
  package:
    exclude:
      - ./**
      - '!./controllers/todo/gettodos*'
  events:
    - http:
        path: /api/gettodos
        method: post
        cors: true

gettodo:
  description: TODO - Get Todo API.
  handler:
    - middlewares/authGuard.authGuard
    - then: controllers/todo/gettodo.handler
  package:
    exclude:
      - ./**
      - '!./controllers/todo/gettodo*'
  events:
    - http:
        path: /api/gettodo/{id}
        method: get
        cors: true

createtodo:
  description: TODO - Create Todo API.
  handler:
    - middlewares/authGuard.authGuard
    - then: middlewares/bodyParser.bodyParser
    - then: middlewares/validations/todo/createTodoValidation.validator
    - then: controllers/todo/createtodo.handler
  package:
    exclude:
      - ./**
      - '!./controllers/todo/createtodo*'
  events:
    - http:
        path: /api/createtodo
        method: post
        cors: true

updatetodo:
  description: TODO - Update Todo API.
  handler:
    - middlewares/authGuard.authGuard
    - then: middlewares/bodyParser.bodyParser
    - then: middlewares/validations/todo/updateTodoValidation.validator
    - then: controllers/todo/updatetodo.handler
  package:
    exclude:
      - ./**
      - '!./controllers/todo/updatetodo*'
  events:
    - http:
        path: /api/updatetodo/{id}
        method: post
        cors: true

deletetodo:
  description: TODO - Delete Todo API.
  handler:
    - middlewares/authGuard.authGuard
    - then: controllers/todo/deletetodo.handler
  package:
    exclude:
      - ./**
      - '!./controllers/todo/deletetodo*'
  events:
    - http:
        path: /api/deletetodo/{id}
        method: delete
        cors: true
